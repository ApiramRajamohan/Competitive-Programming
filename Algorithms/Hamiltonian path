
#include <bits/stdc++.h>

using namespace std;
bool check_using_dp(vector<vector<int>>adj, int n){
        bool dp[n][1<<n]={0};
        bool ok=false;
        for(int i=0; i<n; i++)
            dp[i][1<<i]=true;
        for(int i=0; i<(1<<n); i++){
            for(int j=0; j<n; j++)
                if(i&(1<<j)){
                    for(int k=0; k<n; k++)
                        if(i&(1<<k) && adj[k][j] && k!=j && dp[k][i^(1<<j)]){
                            dp[j][i]=true;
                            
                            break;
                        }
                       
                }
              
        }
        for(int i=0; i<n; i++)
            if(dp[i][(1<<n)-1])
                return true;
        return false;
    }


int main() {
    int n, m;
    cin>>n>>m;
  vector<vector<int>>adj(n);
    for (int i = 0 ;i<m;i++){
       int x,y;
       cin>>x>>y;
      adj[x].push_back(y);
      adj[y].push_back(x);
    }
    if (check_using_dp(adj,n))cout<<"YES";
    else cout<<"NO";}
