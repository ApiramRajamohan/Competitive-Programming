

#include <bits/stdc++.h>

using namespace std;

void dfs1 (int s ,vector<bool>&visited,vector<vector<int>>&adj,stack<int>&brr){
   visited[s]=true;
for (auto x : adj[s]){
    if (!visited[x])dfs1(x,visited,adj,brr);
   
}
 brr.push(s);
}
int  dfs2 (int s ,vector<bool>&visited,vector<vector<int>>&arr){
    visited[s]=true;
    int counts=1;
    for (auto x:arr[s]){
        if (!visited[x])
        counts+=dfs2(x,visited,arr);
    }
    return counts;
}


int main() {
int n ,m;
cin>>n>>m;
vector<bool>visited(20,false);
stack<int>brr;
vector<vector<int>>adj(20);
vector<vector<int>>arr(20);
for (int i =0 ;i<m;i++){
    int a ,b;
    cin>>a>>b;
  
    adj[a].push_back(b);
    arr[b].push_back(a);
}
for (int i = 1 ;i<=n;i++)visited[i]=false;
int odd=0;
int even =0 ;
for (int i=1 ;i<=n;i++){
    if (!visited[i])dfs1(i,visited,adj,brr);
}
for (int i = 1 ;i<=n;i++)visited[i]=false;
while (!brr.empty()){
    int counts=0;
    int temp = brr.top();
    brr.pop();
        if (!visited[temp])
         counts= dfs2(temp , visited , arr);
        if ( counts % 2 ==1)odd+=counts;
        else even+=counts;
    }

cout<<odd-even<<endl;} //sum of number of nodes in all Strongly Connected Components with odd number of nodes && even number of nodes;
//The Difference :)
