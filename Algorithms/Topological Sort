#include <bits/stdc++.h>

using namespace std;
vector<int>topo;
vector<vector<int>>arr(15);
vector<bool>visited(15);
vector<int>indegree(15);
vector<int>topological_sort(int n){
   priority_queue<int,vector<int>,greater<int>>Q;
    for (int i =1 ;i<=n ;i++){
        indegree[i]=0;
        visited[i]=false;
    }
    for (int i =1 ;i<=n;i++){
        for (auto x:arr[i]){
            indegree[x]+=1;
        }
    }
    for (int i = 1 ;i<=n ;i++){
        if (indegree[i]==0){
Q.push(i);
visited[i]=true;
        }
    }
    while (!Q.empty()){
        int v= Q.top();
        Q.pop();
        topo.push_back(v);
        for (auto x: arr[v]){
            if (!visited[x]){
                indegree[x]--;
                if (indegree[x]==0){Q.push(x);
                visited[x]=true;}
            }
        }
    }
   return topo;
}
int main() {
int n ,m;
cin>>n>>m;

for (int i = 0 ;i<m;i++){
    int a,b;
    cin>>a>>b;
arr[a].push_back(b);
}
vector<int>adj = topological_sort(n);
for (auto x :adj)cout<<x<<" ";}
